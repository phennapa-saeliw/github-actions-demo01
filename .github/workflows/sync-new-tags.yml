name: Sync Schedule by tag

on:
  push:
    branches:
      - main

jobs:
  sync-latest-version:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Add Upstream
      run: |
        git remote add upstream https://github.com/phennapa/github-actions-demo01.git
        git fetch upstream

    - name: Fetch latest upstream versions, then merge to 'main'
      id: fetch-and-merge
      run: |
        SYNC_VERSION="v$(curl --write-out '%{redirect_url}' 'https://github.com/phennapa/github-actions-demo01/releases/latest' | sed 's,.*/v,,')"
        echo "new version $SYNC_VERSION"
        git checkout -b new-tag-$SYNC_VERSION
        git merge --allow-unrelated-histories upstream/main || true
        if [ -n "$(git ls-files --unmerged)" ]; then
          echo "Resolving merge conflicts..."
          # Automatically choose the upstream version for conflicting files
          git checkout --theirs .
          git add .
          git commit -m "Resolved merge conflicts"
        fi
        git push origin new-tag-$SYNC_VERSION
        echo "::set-output name=branch_created::true"

    - name: Create Pull Request
      if: steps.fetch-and-merge.outputs.branch_created == 'true'
      uses: peter-evans/create-pull-request@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'Sync latest version'
        title: 'Sync latest version v${{ env.SYNC_VERSION }}'
        body: 'This PR was automatically created to sync the latest version.'
        base: main
        head: new-tag-${{ env.SYNC_VERSION }}

    - name: Notify via GitHub Issue
      if: steps.fetch-and-merge.outputs.branch_created == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          const issueTitle = 'New Pull Request Created';
          const issueBody = `A new pull request has been created to sync the latest version v${process.env.SYNC_VERSION}.`;
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: issueTitle,
            body: issueBody
          });

    - name: Post Checkout repository
      run: |
        # Any post-checkout steps if needed

    - name: Complete job
      run: |
        echo "Job completed successfully"

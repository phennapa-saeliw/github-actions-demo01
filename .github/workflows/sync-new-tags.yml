name: Sync Schedule by tag

on:
  push:
    branches:
      - main

jobs:
  sync-latest-version:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Add Upstream
      run: |
        git remote add upstream https://github.com/phennapa/github-actions-demo01.git
        git fetch upstream

    - name: Fetch latest upstream versions, then merge to 'main'
      id: sync
      run: |
        SYNC_VERSION="v$(curl --write-out '%{redirect_url}' 'https://github.com/phennapa/github-actions-demo01/releases/latest' | sed 's,.*/v,,')"
        echo "New version: $SYNC_VERSION"
        
        BRANCH_NAME="new-tag-$SYNC_VERSION"
        
        # Check if branch already exists
        if git ls-remote --exit-code --heads origin "$BRANCH_NAME"; then
          echo "Branch $BRANCH_NAME already exists. Skipping PR creation."
          echo "BRANCH_CREATED=false" >> $GITHUB_ENV
          exit 0
        fi
        
        # Create new branch and merge changes
        git checkout -b "$BRANCH_NAME"
        git merge --allow-unrelated-histories upstream/main || true
        
        if [ -n "$(git ls-files --unmerged)" ]; then
          echo "Resolving merge conflicts..."
          git checkout --theirs .
          git add .
          git commit -m "Resolved merge conflicts"
        fi
        
        git push origin "$BRANCH_NAME"
        echo "BRANCH_CREATED=true" >> $GITHUB_ENV
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

    - name: Notify via GitHub Pull Request
      if: env.BRANCH_CREATED == 'true'
      run: |
        gh pr create \
          --title "ðŸš€ Sync latest upstream changes: ${{ env.BRANCH_NAME }}" \
          --body "This PR was automatically created to sync the latest upstream changes into the main branch." \
          --base main \
          --head ${{ env.BRANCH_NAME }}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Notify via GitHub Pull Request
      if: env.BRANCH_CREATED == 'true'
      run: |
        gh pr create \
          --title "ðŸš€ Sync latest upstream changes: ${{ env.BRANCH_NAME }}" \
          --body "This PR was automatically created to sync the latest upstream changes into the main branch." \
          --base main \
          --head ${{ env.BRANCH_NAME }}
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}

